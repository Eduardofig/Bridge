DROP TABLE ALUNO;
DROP TABLE CURSO;
DROP TABLE TREINAMENTO;
DROP TABLE PROFESSOR;
DROP TABLE MONITOR;
DROP TABLE ADMINISTRADOR;
DROP TABLE UNIDADE;
DROP TABLE SALA;
DROP TABLE LABORATORIO;
DROP TABLE SALA_DE_AULA;
DROP TABLE OFERECIMENTO;
DROP TABLE ASSISTIDO;
DROP TABLE MONITORIA;
DROP TABLE CERTIFICA;
DROP TABLE SOLICITACAO_DOACAO;
DROP TABLE INSCREVE_SE_EM;
DROP TABLE FUNCIONARIO;

-- olhar numeric pra cpf

CREATE TABLE TREINAMENTO (
    NOME VARCHAR(50) PRIMARY KEY,

    -- mudar pra text
    CONTEUDO_PROGRAMATICO VARCHAR(1000) NOT NULL
);

CREATE TABLE PROFESSOR (
    CPF VARCHAR(11) PRIMARY KEY
);

CREATE TABLE MONITOR (
    CPF VARCHAR(11) PRIMARY KEY
);

CREATE TABLE ADMININSTRADOR (
    CPF VARCHAR(11) PRIMARY KEY,

    SENHA VARCHAR(20) NOT NULL
);

CREATE TABLE UNIDADE (
    CNPJ VARCHAR(14) PRIMARY KEY,

    COMUNIDADE VARCHAR(50) NOT NULL,
    -- mudar pra char
    ESTADO VARCHAR(2) NOT NULL,
    CIDADE VARCHAR(50) NOT NULL,
    BAIRRO VARCHAR(50) NOT NULL,
    RUA VARCHAR(50) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    TEL1 VARCHAR(11) NOT NULL,
    TEL2 VARCHAR(11) NOT NULL,

    CONSTRAINT UNIDADE_ESTADO CHECK (
        ESTADO IN (
            'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO',
            'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI',
            'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'
        )
    )
);

CREATE TABLE SALA (
    UNIDADE VARCHAR(14),
    ANDAR INT,
    NUMERO INT,

    TIPO VARCHAR(20) NOT NULL,
    CAPACIDADE INT NOT NULL,

    CONSTRAINT SALA_PK PRIMARY KEY (
        UNIDADE,
        ANDAR,
        NUMERO
    ),

    CONSTRAINT UNIDADE_FK (
        FOREIGN KEY (UNIDADE) REFERENCES UNIDADE(CNPJ)
    ),

    CONSTRAINT SALA_TIPO CHECK (
        UPPER(TIPO) IN ('Laboratorio', 'Sala de Aula', 'Auditorio')
    )
);

CREATE TABLE LABORATORIO (
    UNIDADE VARCHAR(14),
    ANDAR INT,
    NUMERO INT,

    SISTEMA_OPERACIONAL VARCHAR(20) NOT NULL,

    CONSTRAINT LABORATORIO_PK PRIMARY KEY (
        UNIDADE,
        ANDAR,
        NUMERO
    ),

    CONSTRAINT LABORATORIO_FK (
        FOREIGN KEY (UNIDADE, ANDAR, NUMERO) REFERENCES SALA(UNIDADE, ANDAR, NUMERO)
    )
);

CREATE TABLE SALA_DE_AULA (
    UNIDADE VARCHAR(14),
    ANDAR INT,
    NUMERO INT,

    CONSTRAINT SALA_DE_AULA_PK PRIMARY KEY (
        UNIDADE,
        ANDAR,
        NUMERO
    ),

    CONSTRAINT SALA_DE_AULA_FK (
        FOREIGN KEY (UNIDADE, ANDAR, NUMERO) REFERENCES SALA(UNIDADE, ANDAR, NUMERO)
    )
);

CREATE TABLE OFERECIMENTO (
    TREINAMENTO VARCHAR(50) NOT NULL,

    PROFESSOR VARCHAR(11),
    DATA_HORA_INICIO TIMESTAMP,
    DATA_HORA_FIM TIMESTAMP NOT NULL,
    QTD_MAX_ALUNOS INT NOT NULL,
    QTD_ALUNOS INT NOT NULL,
    UNIDADE VARCHAR(14) NOT NULL, 
    ANDAR INT NOT NULL,
    SALA INT NOT NULL,

    CONSTRAINT OFERECIMENTO_PK PRIMARY KEY (
        PROFESSOR,
        DATA_HORA_INICIO
    ),

    CONSTRAINT OFERECIMENTO_FK1 (
        FOREIGN KEY (TREINAMENTO) REFERENCES TREINAMENTO(NOME)
    ),

    CONSTRAINT OFERECIMENTO_FK2 (
        FOREIGN KEY (PROFESSOR) REFERENCES PROFESSOR(CPF)
    ),

    CONSTRAINT OFERECIMENTO_FK3 (
        FOREIGN KEY (UNIDADE, ANDAR, SALA) REFERENCES SALA_DE_AULA(UNIDADE, ANDAR, NUMERO)
    ),
);

CREATE TABLE ASSISTIDO (
    CPF VARCHAR(11) PRIMARY KEY,
    NOME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    ESTADO VARCHAR(2) NOT NULL,
    CIDADE VARCHAR(50) NOT NULL,
    BAIRRO VARCHAR(50) NOT NULL,
    RUA VARCHAR(50) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    SENHA VARCHAR(20) NOT NULL,
    DATA_NASC DATE NOT NULL,
    PROFISSAO VARCHAR(50) NOT NULL,
    RENDA_MENSAL FLOAT NOT NULL,
    TEL VARCHAR(11) NOT NULL,

    CONSTRAINT ASSISTIDO_ESTADO CHECK (
        ESTADO IN (
            'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO',
            'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI',
            'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'
        )
    ),

    CONSTRAINT EMAIL_UNIQUE UNIQUE (EMAIL),
    CONSTRAINT EMAIL_CHECK CHECK (EMAIL ~* '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$')
);

CREATE TABLE MONITORIA (
    MONITOR VARCHAR(11),
    DIA_DA_SEMANA VARCHAR(10),
    TURNO VARCHAR(10),
    UNIDADE VARCHAR(14),
    ANDAR INT,
    SALA INT,

    CONSTRAINT MONITORIA_PK PRIMARY KEY (
        MONITOR,
        DIA_DA_SEMANA,
        TURNO
    ),

    CONSTRAINT MONITORIA_FK1 (
        FOREIGN KEY (MONITOR) REFERENCES MONITOR(CPF)
    ),

    CONSTRAINT MONITORIA_FK2 (
        FOREIGN KEY (UNIDADE, ANDAR, SALA) REFERENCES LABORATORIO(UNIDADE, ANDAR, NUMERO)
    ),
);

CREATE TABLE EQUIPAMENTO (
    NUMERO_SERIAL VARCHAR(50) PRIMARY KEY,
    TIPO VARCHAR(20) NOT NULL,
    DESCRICAO VARCHAR(100),
    UNIDADE VARCHAR(14),
    ANDAR INT,
    SALA INT,

    CONSTRAINT EQUIPAMENTO_FK (
        FOREIGN KEY (UNIDADE, ANDAR, SALA) REFERENCES SALA(UNIDADE, ANDAR, NUMERO)
    ),
);

CREATE TABLE SOLICITACAO_DOACAO (
    ASSISTIDO VARCHAR(11),
    DATA_HORA_SOL TIMESTAMP,
    GRAU_NECESSIDADE INT NOT NULL,
    TIPO_EQUIPAMENTO VARCHAR(20) NOT NULL,
    EQUIPAMENTO VARCHAR(50) NOT NULL,
    DATA_HORA_DOACAO TIMESTAMP,

    CONSTRAINT SOLICITACAO_DOACAO_PK PRIMARY KEY (
        ASSISTIDO,
        DATA_HORA_SOL
    ),

    CONSTRAINT SOLICITACAO_DOACAO_FK1 (
        FOREIGN KEY (ASSISTIDO) REFERENCES ASSISTIDO(CPF)
    ),

    CONSTRAINT SOLICITACAO_DOACAO_FK2 (
        FOREIGN KEY (EQUIPAMENTO) REFERENCES EQUIPAMENTO(NUMERO_SERIAL)
    ),

    CONSTRAINT SOLICITACAO_DOACAO_UNIQUE UNIQUE EQUIPAMENTO
);

CREATE TABLE FUNCIONARIO (
    CPF VARCHAR(11) PRIMARY KEY,
    NOME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    ESTADO VARCHAR(2) NOT NULL,
    CIDADE VARCHAR(50) NOT NULL,
    BAIRRO VARCHAR(50) NOT NULL,
    RUA VARCHAR(50) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    UNIDADE VARCHAR(14) NOT NULL,

    CONSTRAINT FUNCIONARIO_ESTADO CHECK (
        ESTADO IN (
            'AC', 'AL', 'AP', 'AM', 'BA', 'CE', 'DF', 'ES', 'GO',
            'MA', 'MT', 'MS', 'MG', 'PA', 'PB', 'PR', 'PE', 'PI',
            'RJ', 'RN', 'RS', 'RO', 'RR', 'SC', 'SP', 'SE', 'TO'
        )
    ),

    CONSTRAINT EMAIL_UNIQUE UNIQUE (EMAIL),
    CONSTRAINT EMAIL_CHECK CHECK (EMAIL ~* '^[A-Za-z0-9._+%-]+@[A-Za-z0-9.-]+[.][A-Za-z]+$'),

);

CREATE TABLE INSCREVE_SE_EM (
    ASSISTIDO VARCHAR(11),
    PROFESSOR VARCHAR(11),
    DATA_HORA_INICIO TIMESTAMP,

    CONSTRAINT INSCREVE_SE_EM_PK PRIMARY KEY (
        ASSISTIDO,
        PROFESSOR,
        DATA_HORA_INICIO
    ),

    CONSTRAINT INSCREVE_SE_EM_FK1 (
        FOREIGN KEY (ASSISTIDO) REFERENCES ASSISTIDO(CPF)
    ),

    CONSTRAINT INSCREVE_SE_EM_FK2 (
        FOREIGN KEY (PROFESSOR, DATA_HORA_INICIO) REFERENCES OFERECIMENTO(PROFESSOR, DATA_HORA_INICIO)
    ),
);

CREATE TABLE AGENDAMENTO (
    PROFESSOR VARCHAR(11),
    DATA_HORA_INICIO TIMESTAMP,
    DIA_DA_SEMANA VARCHAR(10),
    HORA_INICIO TIME,
    HORA_FIM TIME NOT NULL,

    CONSTRAINT AGENDAMENTO_PK PRIMARY KEY (
        PROFESSOR,
        DATA_HORA_INICIO,
        DIA_DA_SEMANA,
        HORA_INICIO
    ),

    CONSTRAINT AGENDAMENTO_FK1 (
        FOREIGN KEY (PROFESSOR, DATA_HORA_INICIO) REFERENCES OFERECIMENTO(PROFESSOR, DATA_HORA_INICIO)
    ),
);

CREATE TABLE CERTIFICA (
    ASSITIDO VARCHAR(11),
    TREINAMENTO VARCHAR(50),
    DATA_CERTIFICACAO TIMESTAMP NOT NULL,

    CONSTRAINT CERTIFICA_PK PRIMARY KEY (
        ASSITIDO,
        TREINAMENTO
    ),

    CONSTRAINT CERTIFICA_FK1 (
        FOREIGN KEY (ASSITIDO) REFERENCES ASSISTIDO(CPF)
    ),

    CONSTRAINT CERTIFICA_FK2 (
        FOREIGN KEY (TREINAMENTO) REFERENCES TREINAMENTO(NOME)
    ),
);
